{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Aux/Aux.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Closed","open","Open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Lettuce","Bacon","proptype","PropTypes","string","isRequired","burger","ingredientsArray","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","prev","curr","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","disable","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","console","log","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","testTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","ADD_INGREDIENT","REMOVE_INGREDIENT","BurgerBuilder","purchasing","loading","purchaseHandler","purchaseCanceledHandler","purchaseContinueHandler","history","push","sum","el","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","totalPrice","dispatch","ingName","actionTypes","ingredientName","checkoutSummary","CheckoutSummary","width","margin","checkoutCanceled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","then","catch","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","identifier","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","igns","Checkout","goBack","replace","path","match","component","amount","ingredientOutput","ig","textTransform","display","border","padding","Order","Number","parseFloat","orders","get","fetchedOrders","data","err","App","Orders","Boolean","window","location","hostname","initialState","lettuce","bacon","cheese","meat","INGREDIENT_PRICES","reducer","action","store","createStore","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e7ae9960.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Lettuce\":\"BurgerIngredient_Lettuce__24-RC\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Closed\":\"SideDrawer_Closed__wRM5T\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2ZMeK\",\"Label\":\"Input_Label__2XMBp\",\"InputElement\":\"Input_InputElement__k202p\",\"Invalid\":\"Input_Invalid__1NrbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load3\":\"Spinner_load3__3VkKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","const aux = ( props ) => props.children;\n\nexport default aux","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.module.css'\n\nconst logo = (props) => (\n    <div className={classes.Logo}>\n        <img src={burgerLogo} alt=\"MyBurger\"/>\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css'\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink\n            to={props.link}\n            exact={props.exact}\n            activeClassName={classes.active}>{props.children}\n        </NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport classes from './NavigationItems.module.css'\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = () => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/burger-app/\" exact>BurgerBuilder</NavigationItem>\n        <NavigationItem link=\"/burger-app/orders\">Orders</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div onClick={props.clicked} className={classes.DrawerToggle}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;\n","import React from 'react';\n\nimport classes from './Backdrop.module.css'\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css'\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst sideDrawer = (props) => {\n\n    var attachedClasses = [classes.SideDrawer, classes.Closed];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open]\n    }\n\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\n\nimport Aux from '../Aux/Aux'\nimport classes from './Layout.module.css'\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false})\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return{showSideDrawer: !prevState.showSideDrawer};\n        });\n    }\n\n    render () {\n        return(\n            <Aux>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer closed={this.sideDrawerClosedHandler} open={this.state.showSideDrawer} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        );\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.module.css';\n\nclass BurgerIngredient extends Component {\n\n    render () {\n    \n        let ingredient = null;\n\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case ('lettuce'):\n                ingredient = <div className={classes.Lettuce}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>;\n                break; \n            default:\n                ingredient = null;\n        }\n\n        return ingredient\n\n    }\n};\n\nBurgerIngredient.proptype = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n\n    let ingredientsArray = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={igKey+i} type={igKey} />;\n            });\n        })\n        .reduce((prev, curr) => {\n            return prev.concat(curr)\n        }, []);\n\n    if (ingredientsArray.length === 0) {\n        ingredientsArray = <p>Please start adding ingredients!</p>\n    }\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {ingredientsArray}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n\n};\n\nexport default burger;","import React from 'react';\n\nimport classes from './BuildControl.module.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disable}>Less</button>\n        <button \n            className={classes.More} \n            onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\n\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Lettuce', type: 'lettuce'},\n    { label: 'Bacon', type: 'bacon'},\n    { label: 'Cheese', type: 'cheese'},\n    { label: 'Meat', type: 'meat'},    \n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>${props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disable={props.disabled[ctrl.type]}/>\n        ))}\n        <button \n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>ORDER NOW</button>\n    </div>\n);\n\nexport default buildControls;","import React, { Component } from 'react';\n\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate ( nextProps, nextState ) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    componentWillUpdate() {\n        console.log(\"[Modal] WilUpdate\");\n    }\n\n    render () {\n\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)': 'translateY(-100vH)',\n                        opacity: this.props.show ? '1': '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        );\n    }   \n};\n\nexport default Modal;","import React from 'react';\n\nimport classes from './Button.module.css'\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React, { Component } from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n\n    componentWillUpdate() {\n        console.log(\"[OrderSummary] WilUpdate\");\n    }\n\n    render () {\n\n        const ingredientSummary = Object.keys(this.props.ingredients)\n        .map(igKey => {\n            return (\n                <li key={igKey}>\n                    <span style={{ testTransform: \"capitalize\" }}>{igKey}</span>: {this.props.ingredients[igKey]}\n                </li>);\n        });\n\n        return(\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Aux>\n        )\n    }\n};\n\nexport default OrderSummary;","import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            })\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount () {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler} >\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n};\n\nexport default withErrorHandler;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://react-burger-app-fb73f.firebaseio.com/\"\n});\n\nexport default instance;","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport * as actionTypes from '../../store/actions';\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        purchasing: false,\n        loading: false,\n        error: false\n    }\n\n    componentDidMount () {\n        console.log(this.props);\n    //     axios.get('/ingredients.json')\n    //         .then( response => {\n    //             this.setState({ingredients: response.data})\n    //         })\n    //         .catch( error => {\n    //             this.setState({error: true})\n    //         });\n    }\n\n    updatePurchaseState (ingredients) {\n        \n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey];\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCanceledHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.history.push('/burger-app/checkout');\n    }\n\n    render() {\n\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        };\n        \n        let orderSummary = null;\n        let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />\n        \n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls \n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}                    \n                        price={this.props.price} />\n                </Aux>\n            )\n            orderSummary = <OrderSummary \n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCanceledHandler}\n                purchaseContinued={this.purchaseContinueHandler} />\n        }\n        \n        if (this.state.loading) {\n            orderSummary = <Spinner />;\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCanceledHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price: state.totalPrice\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENT, ingredientName: ingName}),\n        onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName})\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.module.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCanceled} >CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued} >CONTINUE</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid)\n    }\n\n    switch (props.elementType) {\n        case ('textarea'):\n            inputElement = <textarea \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ('select'):\n            inputElement = <select \n                className={inputClasses.join(' ')} \n                value={props.value}\n                onChange={props.changed} >\n                {props.elementConfig.options.map(option => (\n                    <option key={option.value} value={option.value}>{option.displayValue}</option>\n                ))}\n            </select>;\n            break;\n        default:\n            inputElement = <input \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n};\n\nexport default input;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/Input/Input';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                validation: {},\n                valid: true,\n                value: 'fastest',\n            },\n        },\n        formIsValid: false,\n        loading: false\n\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({ loading: true })\n\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        \n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData\n        }        \n\n        axios.post('/orders.json',order)\n            .then(response => {\n                this.setState({loading: false});\n                this.props.history.push('/burger-app/');\n            })\n            .catch(error => {\n                this.setState({loading: false});\n            });\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true\n        if (rules.required){\n            isValid = value.trim() !== '' && isValid\n        }\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n        return isValid\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        \n        const updatedOrderForm = {...this.state.orderForm};\n        const updatedFormElement = {...updatedOrderForm[inputIdentifier]};\n        \n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let identifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[identifier].valid && formIsValid\n        }\n\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render() {\n\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key],\n            })\n        };\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType} \n                        elementConfig={formElement.config.elementConfig} \n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} \n                        />\n                ))}\n                <Button btnType=\"Success\" clicked={this.orderHandler} disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if (this.state.loading) {\n            form = <Spinner />\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        igns: state.ingredients,\n        price: state.totalPrice\n    }\n};\n\nexport default connect(mapStateToProps)(ContactData);","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\n    checkoutCanceled = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinued = () => {\n        this.props.history.replace('/burger-app/checkout/contact-data')\n    }\n\n    render() {\n        return (\n            <div>\n                <CheckoutSummary \n                    ingredients={this.props.ings}\n                    checkoutCanceled={this.checkoutCanceled}\n                    checkoutContinued={this.checkoutContinued} />\n                    <Route \n                        path={this.props.match.path+'/contact-data'}\n                        component={ContactData} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n    }\n};\n\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = (props) => {\n    const ingredients = [];\n\n    for (let ingredientName in props.ingredients) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            });\n    };\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform:'capitalize', \n                display: 'inline-block', \n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>$ {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    );\n\n};\n\nexport default order;","import React, { Component } from 'react';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nclass Orders extends Component {\n\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount() {\n        axios.get('/orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                this.setState({loading: false, orders: fetchedOrders});\n            })\n            .catch(err => {\n                this.setState({loading: false});\n            });\n    }\n\n    render() {\n\n        return(\n            <div>\n                {this.state.orders.map(order => (\n                    <Order \n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price} />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Layout>\n                    <Switch>\n                        <Route path=\"/burger-app/checkout\" component={Checkout} />\n                        <Route path=\"/burger-app/orders\" component={Orders} />\n                        <Route path=\"/burger-app/\" exact component={BurgerBuilder} />\n                    </Switch>\n                </Layout>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from './actions';\n\nconst initialState = {\n    ingredients: {\n        lettuce: 0,\n        bacon: 0,\n        cheese: 0, \n        meat: 0\n    },\n    totalPrice: 4\n};\n\nconst INGREDIENT_PRICES = {\n    lettuce: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7,\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1 \n                },\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            };\n        case actionTypes.REMOVE_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1 \n                },\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}