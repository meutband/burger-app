{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Aux/Aux.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/actionTypes.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Closed","open","Open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Lettuce","Bacon","proptype","PropTypes","string","isRequired","burger","ingredientsArray","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","prev","curr","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","disable","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","testTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","initIngredients","dispatch","get","then","data","actionTypes","catch","purchaseBurger","orderData","post","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","fetchOrders","userId","queryParams","fetchedOrders","push","orders","err","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","email","password","isSignup","url","returnSecureToken","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseCanceledHandler","purchaseContinueHandler","onInitPurchased","onInitIngredients","sum","el","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","ingredientName","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCanceled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","identifier","rules","isValid","trim","isEmail","test","isNumeric","formElementsArray","config","form","onSubmit","formElement","loading","Checkout","goBack","replace","summary","purchasedRedirect","purchased","match","component","amount","ingredientOutput","ig","textTransform","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","Auth","isSignUp","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","Logout","onLogout","App","onTryAutoSignin","routes","withRouter","getItem","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","lettuce","cheese","meat","bacon","reducer","action","newOrder","orderID","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.f6c9cd2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Lettuce\":\"BurgerIngredient_Lettuce__24-RC\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Closed\":\"SideDrawer_Closed__wRM5T\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2ZMeK\",\"Label\":\"Input_Label__2XMBp\",\"InputElement\":\"Input_InputElement__k202p\",\"Invalid\":\"Input_Invalid__1NrbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load3\":\"Spinner_load3__3VkKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","const aux = ( props ) => props.children;\n\nexport default aux","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.module.css'\n\nconst logo = (props) => (\n    <div className={classes.Logo}>\n        <img src={burgerLogo} alt=\"MyBurger\"/>\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css'\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink\n            to={props.link}\n            exact={props.exact}\n            activeClassName={classes.active}>{props.children}\n        </NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport classes from './NavigationItems.module.css'\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/burger-app/\" exact>BurgerBuilder</NavigationItem>\n        { props.isAuthenticated ? <NavigationItem link=\"/burger-app/orders\">Orders</NavigationItem> : null}\n        { !props.isAuthenticated \n            ? <NavigationItem link=\"/burger-app/auth\">Authenticate</NavigationItem>\n            : <NavigationItem link=\"/burger-app/logout\">Logout</NavigationItem>\n        }\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div onClick={props.clicked} className={classes.DrawerToggle}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth}/>\n        </nav>\n    </header>\n);\n\nexport default toolbar;\n","import React from 'react';\n\nimport classes from './Backdrop.module.css'\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css'\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst sideDrawer = (props) => {\n\n    var attachedClasses = [classes.SideDrawer, classes.Closed];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open]\n    }\n\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth}/>\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../Aux/Aux'\nimport classes from './Layout.module.css'\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false})\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return{showSideDrawer: !prevState.showSideDrawer};\n        });\n    }\n\n    render () {\n        return(\n            <Aux>\n                <Toolbar \n                    isAuth={this.props.isAuthenticated}\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer \n                    isAuth={this.props.isAuthenticated}\n                    closed={this.sideDrawerClosedHandler} \n                    open={this.state.showSideDrawer} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.module.css';\n\nclass BurgerIngredient extends Component {\n\n    render () {\n    \n        let ingredient = null;\n\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case ('lettuce'):\n                ingredient = <div className={classes.Lettuce}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>;\n                break; \n            default:\n                ingredient = null;\n        }\n\n        return ingredient\n\n    }\n};\n\nBurgerIngredient.proptype = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n\n    let ingredientsArray = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={igKey+i} type={igKey} />;\n            });\n        })\n        .reduce((prev, curr) => {\n            return prev.concat(curr)\n        }, []);\n\n    if (ingredientsArray.length === 0) {\n        ingredientsArray = <p>Please start adding ingredients!</p>\n    }\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {ingredientsArray}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n\n};\n\nexport default burger;","import React from 'react';\n\nimport classes from './BuildControl.module.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disable}>Less</button>\n        <button \n            className={classes.More} \n            onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\n\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Lettuce', type: 'lettuce'},\n    { label: 'Bacon', type: 'bacon'},\n    { label: 'Cheese', type: 'cheese'},\n    { label: 'Meat', type: 'meat'},    \n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>${props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disable={props.disabled[ctrl.type]}/>\n        ))}\n        <button \n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\n    </div>\n);\n\nexport default buildControls;","import React, { Component } from 'react';\n\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate ( nextProps, nextState ) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render () {\n\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)': 'translateY(-100vH)',\n                        opacity: this.props.show ? '1': '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        );\n    }   \n};\n\nexport default Modal;","import React from 'react';\n\nimport classes from './Button.module.css'\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React, { Component } from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n\n    render () {\n\n        const ingredientSummary = Object.keys(this.props.ingredients)\n        .map(igKey => {\n            return (\n                <li key={igKey}>\n                    <span style={{ testTransform: \"capitalize\" }}>{igKey}</span>: {this.props.ingredients[igKey]}\n                </li>);\n        });\n\n        return(\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Aux>\n        )\n    }\n};\n\nexport default OrderSummary;","import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            })\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount () {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler} >\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n};\n\nexport default withErrorHandler;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://react-burger-app-fb73f.firebaseio.com/\"\n});\n\nexport default instance;","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import * as actionTypes from './actionTypes';\n\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    };\n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\n    };\n};\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('/ingredients.json')\n            .then( response => {\n                dispatch(setIngredients(response.data))\n            })\n            .catch( error => {\n                dispatch(fetchIngredientsFailed())\n            });\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n};\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart())\n        axios.post('/orders.json?auth=' + token, orderData)\n        .then(response => {\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData))\n        })\n        .catch(error => {\n            dispatch(purchaseBurgerFail(error))\n        });\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get('/orders.json' + queryParams)\n        .then(res => {\n            const fetchedOrders = [];\n            for (let key in res.data) {\n                fetchedOrders.push({\n                    ...res.data[key],\n                    id: key\n                });\n            }\n            dispatch(fetchOrdersSuccess(fetchedOrders));\n        })\n        .catch(err => {\n            dispatch(fetchOrdersFail(err))\n        });\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAZbrTEhKLUZexiAeJBEfm4XLMd91svQF8'\n        if (!isSignup) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAZbrTEhKLUZexiAeJBEfm4XLMd91svQF8'\n        }\n        const data = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n        axios.post(url, data)\n        .then(response => {\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n            localStorage.setItem('token', response.data.idToken);\n            localStorage.setItem('expirationDate', expirationDate);\n            localStorage.setItem('userId', response.data.localId);\n            dispatch(authSuccess(response.data.idToken, response.data.localId))\n            dispatch(checkAuthTimeout(response.data.expiresIn));\n        })\n        .catch(err => {\n            dispatch(authFail(err.response.data.error));\n        })\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate > new Date()) {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\n            } else {\n                dispatch(logout());\n            }\n        }\n    };\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport * as actions from '../../store/actions/index';\n\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        purchasing: false,\n    };\n\n    componentDidMount () {\n        this.props.onInitIngredients();\n    };\n\n    updatePurchaseState (ingredients) {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey];\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n\n        return sum > 0;\n    };\n\n    purchaseHandler = () => {\n        if (this.props.isAuthenticated) {\n            this.setState({purchasing: true});\n        } else {\n            this.props.onSetAuthRedirectPath(\"/burger-app/checkout\");\n            this.props.history.push(\"/burger-app/auth\");\n        }\n    };\n\n    purchaseCanceledHandler = () => {\n        this.setState({purchasing: false});\n    };\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchased();\n        this.props.history.push('/burger-app/checkout');\n    };\n\n    render() {\n\n        const disabledInfo = {\n            ...this.props.ings\n        };\n\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        };\n        \n        let orderSummary = null;\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />\n        \n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls \n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}  \n                        isAuth={this.props.isAuthenticated}                  \n                        price={this.props.price} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary \n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCanceledHandler}\n                purchaseContinued={this.purchaseContinueHandler} />\n        };\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCanceledHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchased: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.module.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCanceled} >CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued} >CONTINUE</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid)\n    }\n\n    switch (props.elementType) {\n        case ('textarea'):\n            inputElement = <textarea \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ('select'):\n            inputElement = <select \n                className={inputClasses.join(' ')} \n                value={props.value}\n                onChange={props.changed} >\n                {props.elementConfig.options.map(option => (\n                    <option key={option.value} value={option.value}>{option.displayValue}</option>\n                ))}\n            </select>;\n            break;\n        default:\n            inputElement = <input \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n};\n\nexport default input;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/Input/Input';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../store/actions/index';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                validation: {},\n                valid: true,\n                value: 'fastest',\n            },\n        },\n        formIsValid: false,\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        \n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            userId: this.props.userId\n        }   \n        \n        this.props.onOrderBurger(order, this.props.token);\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true\n\n        if (rules.required){\n            isValid = value.trim() !== '' && isValid\n        }\n        \n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n        \n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n       \n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n        \n        return isValid\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        \n        const updatedOrderForm = {...this.state.orderForm};\n        const updatedFormElement = {...updatedOrderForm[inputIdentifier]};\n        \n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let identifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[identifier].valid && formIsValid\n        }\n\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render() {\n\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key],\n            })\n        };\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType} \n                        elementConfig={formElement.config.elementConfig} \n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} \n                        />\n                ))}\n                <Button btnType=\"Success\" clicked={this.orderHandler} disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\n    checkoutCanceled = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinued = () => {\n        this.props.history.replace('/burger-app/checkout/contact-data')\n    }\n\n    render() {\n        let summary = <Redirect to='/burger-app'/>\n        if (this.props.ings) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to='/burger-app'/> : null; \n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary \n                        ingredients={this.props.ings}\n                        checkoutCanceled={this.checkoutCanceled}\n                        checkoutContinued={this.checkoutContinued} />\n                    <Route \n                        path={this.props.match.path+'/contact-data'}\n                        component={ContactData} />\n                </div>\n            );\n        }\n        return summary;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    };\n};\n\n\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = (props) => {\n    const ingredients = [];\n\n    for (let ingredientName in props.ingredients) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            });\n    };\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform:'capitalize', \n                display: 'inline-block', \n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>$ {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    );\n\n};\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    };\n\n    render() {\n        let orders = <Spinner />;\n        if (!this.props.loading) {\n            orders = this.props.orders.map(order => (\n                <Order \n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            ))\n        };\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport classes from './Auth.module.css';\nimport * as actions from '../../store/actions/index';\n\nclass Auth extends Component {\n\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Mail Address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        isSignUp: true\n    };\n\n    componentDidMount() {\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== \"/burger-app\") {\n            this.onSetAuthRedirectPath()\n        }\n    };\n\n    checkValidity(value, rules) {\n        let isValid = true\n        if (rules.required){\n            isValid = value.trim() !== '' && isValid\n        }\n        \n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n        \n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n       \n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n        \n        return isValid\n    }\n\n    inputChangedHandler = (event, controlName) => {\n        \n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            }\n        };\n\n        this.setState({controls: updatedControls});\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\n    }\n\n    switchAuthModeHandler = () => {\n        this.setState(prevState => {\n            return {isSignUp: !prevState.isSignUp}\n        })\n    }\n\n    render () {\n        \n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key],\n            })\n        };\n\n        let form = formElementsArray.map(formElement => (\n            <Input \n                key={formElement.id}\n                elementType={formElement.config.elementType} \n                elementConfig={formElement.config.elementConfig} \n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n        ));\n\n        if (this.props.loading) {\n            form = <Spinner />\n        };\n\n        let errorMessage = null;\n\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        };\n\n        let authRedirect = null;\n        if (this.props.isAuthenticated) {\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\n        };\n\n        return (\n            <div className={classes.Auth}>\n                {authRedirect}\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\">SUBMIT</Button>\n                </form>\n                <Button \n                    clicked={this.switchAuthModeHandler}\n                    btnType=\"Danger\">\n                    SWITCH TO {this.state.isSignUp ? 'SIGNIN' : 'SIGNUP'}\n                    </Button>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        buildingBurger: state.burgerBuilder.building,\n        authRedirectPath: state.auth.authRedirectPath\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/burger-app\"))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../store/actions/index';\n\nclass Logout extends Component {\n\n    componentDidMount () {\n        this.props.onLogout();\n    }\n\n    render () {\n        return (\n            <Redirect to=\"/burger-app\" />\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n\n    componentDidMount () {\n        this.props.onTryAutoSignin();\n    };\n\n    render() {\n\n        let routes = (\n            <Switch>\n                <Route path=\"/burger-app/auth\" component={Auth} />\n                <Route path=\"/burger-app/\" exact component={BurgerBuilder} />\n                <Redirect to=\"/burger-app\" />\n            </Switch>\n        );\n\n        if (this.props.isAuthenticated) {\n            routes = (\n                <Switch>\n                    <Route path=\"/burger-app/logout\" component={Logout} />\n                    <Route path=\"/burger-app/checkout\" component={Checkout} />\n                    <Route path=\"/burger-app/orders\" component={Orders} />\n                    <Route path=\"/burger-app/\" exact component={BurgerBuilder} />\n                    <Redirect to=\"/burger-app\" />\n                </Switch>\n            )\n        }\n        return (\n            <div>\n                <Layout>\n                    {routes}\n                </Layout>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignin: () => dispatch(actions.authCheckState())\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    lettuce: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7,\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1 \n                },\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n                building: true\n            };\n        case actionTypes.REMOVE_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1 \n                },\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n                building: true\n            };\n        case actionTypes.SET_INGREDIENTS:\n            return {\n                ...state,\n                ingredients: action.ingredients,\n                totalPrice: 4,\n                error: false,\n                building: false\n            }\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return {\n                ...state,\n                error: true\n            }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT:\n            return {\n                ...state,\n                purchased: false,\n            }\n        case actionTypes.PURCHASE_BURGER_START:\n            return {\n                ...state,\n                loading: true\n            }\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = {\n                ...action.orderData,\n                id: action.orderID\n            };\n            return {\n                ...state,\n                loading: false,\n                orders: state.orders.concat(newOrder),\n                purchased: true\n            };\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return {\n                ...state,\n                loading: false\n            };\n        case actionTypes.FETCH_ORDERS_START:\n            return {\n                ...state,\n                loading: true\n            };\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return {\n                ...state,\n                orders: action.orders,\n                loading: false\n            };\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/burger-app'\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:\n            return {\n                ...state,\n                error: null,\n                loading: true\n            };\n        case actionTypes.AUTH_SUCCESS:\n            return {\n                ...state,\n                error: null,\n                loading: false,\n                userId: action.userId,\n                token: action.idToken,\n                \n            };\n        case actionTypes.AUTH_FAIL:\n            return {\n                ...state,\n                error: action.error,\n                loading: false\n            };\n        case actionTypes.AUTH_LOGOUT:\n            return {\n                ...state,\n                token: null,\n                userId: null\n            };\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\n            return {\n                ...state,\n                authRedirectPath: action.path\n            };\n        default:\n            return state;\n    };\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n})\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n  ));\n\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}